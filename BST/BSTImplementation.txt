import java.util.*;
import java.util.Scanner;

class Main {
  public static void main(String[] args) {
    
    Node root = Node.takeInput(null);

    Node.levelOrderTraversal(root);
  }
}

class Node {

  int data;
  Node left;
  Node right;

  Node(int data) {
    this.data = data;
    this.left = null;
    this.right = null;
  }

  public static Node buildBST(Node root, int data) {
    
    if (root == null) {
      root = new Node(data);
      return root;
    } 
    
    if(root.data > data) {
      root.left = buildBST(root.left, data);
    } else {
      root.right = buildBST(root.right, data);
    }
    
    return root;
  }

  public static Node takeInput(Node root) {

    Scanner input = new Scanner(System.in);
    System.out.println("Input data");
    int data = input.nextInt();
    
    while(data != -1) {

      root = buildBST(root, data);
      System.out.println("Input data");
      data = input.nextInt();
    }

    return root;
  }

  public static void levelOrderTraversal(Node root) {

    if(root == null) {
      System.out.println("khatam");
      return;
    }
    Queue<Node> q = new LinkedList<>();
    q.add(root);
    q.add(null);

    while (!q.isEmpty()) {

      Node temp = q.peek();

      q.remove();

      if(temp == null) {
        System.out.println();

        if(!q.isEmpty()) {
          q.add(null);
        }
      } else {
        System.out.print(temp.data + " ");
        if(temp.left != null) {
          q.add(temp.left);
        }
  
        if(temp.right != null) {
          q.add(temp.right);
        }
      }
    }
  }
}