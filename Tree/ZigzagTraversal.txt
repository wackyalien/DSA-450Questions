class GFG
{
    //Function to store the zig zag order traversal of tree in a list.
	ArrayList<Integer> zigZagTraversal(Node root)
	{
	    //Add your code here.
	    
	    if(root == null) {
	        return new ArrayList<>();
	    }
	    
	    ArrayList<Integer> ans = new ArrayList<>();
	    
	    Queue<Node> q = new LinkedList<>();
	    q.add(root);
	    boolean leftToRight = true;
	    
	    while(!q.isEmpty()) {
	        
	        int size = q.size();
	        
	        ArrayList<Integer> preAns = new ArrayList<>();
	        
	        for (int i = 0; i<size; i++) {
	            Node temp = q.remove();
	            
	            if(temp.left != null) {
	                q.add(temp.left);
	            }
	            
	            if(temp.right != null) {
	                q.add(temp.right);
	            }
	            
	            preAns.add(temp.data);
	        }
	        
	        if(!leftToRight) {
	            Collections.reverse(preAns);
	        }
	        
	        for(int j = 0; j < preAns.size(); j++) {
	            ans.add(preAns.get(j));
	        }
	        
	        leftToRight = !leftToRight;
	    }
	    
	    return ans;
	}
}