import java.util.*;
import java.lang.*;
import java.io.*;
import java.util.Scanner;

class Main {
  public static void main(String[] args) {
    Scanner input = new Scanner(System.in);
    System.out.println("Enter root node data :: ");

    int rootNode = input.nextInt();

    Node root = Node.buildTree(rootNode);

    Node.levelOrderTraversal(root);
  }
}

class Node {

  int data;
  Node left;
  Node right;

  Node(int data) {
    this.data = data;
    this.left = null;
    this.right = null;
  }

  public static Node buildTree(int data) {

    if (data == -1) {
      return null;
    }

    Node root = new Node(data);

    Scanner input = new Scanner(System.in);

    // left node
    System.out.println("Enter left node :: ");
    int leftNode = input.nextInt();
    root.left = buildTree(leftNode);
    // right node
    System.out.println("Enter right node :: ");
    int rightNode = input.nextInt();
    root.right = buildTree(rightNode);

    return root;
  }

  public static void levelOrderTraversal(Node root) {

    Queue<Node> q = new LinkedList<>();
    int height = 0;
    q.add(root);
    q.add(null);

    while (!q.isEmpty()) {

      Node temp = q.peek();

      q.remove();

      if(temp == null) {
        height++;

        if(!q.isEmpty()) {
          q.add(null);
        }
      } else {
        if (temp.right != null) {
        q.add(temp.right);
      }

      if (temp.left != null) {
        q.add(temp.left);
      }
      }
    }

    System.out.println("Height = "+ height);
    
  }
}